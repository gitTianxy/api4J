package com.java.api.apache.commons.collections;

import org.apache.commons.collections.Buffer;
import org.apache.commons.collections.BufferUtils;
import org.apache.commons.collections.buffer.BoundedFifoBuffer;

/**
 * TODO
 * 场景: 队列
 * 类型
 * 1. UnboundedFifoBuffer, BoundedFifoBuffer
 * 2. BlockingBuffer: 线程安全
 * 3. TypedBuffer: 执行类型检查
 * 4. UnmodifiableBuffer: 不可改变
 * 5. PriorityBuffer: 可通过定义comparator人为指定优先级
 *
 * NOTE
 * 1. Created by kevintian on 2017/9/26.
 */
public class BufferDemo {
    // auto-generated by typing: psvm+enter
    public static void main(String[] args) {
        BufferDemo demo = new BufferDemo();
        demo.boundedBuffer();
    }

    /**
     * NOTE:
     * 1. 'add' to the tail
     * 2. 'get', 'remove' from the head
     * 3. once the number of element exceeds the limit, the Buffer.add() method throws 'org.apache.commons
     *      .collections.BufferOverflowException'
     */
    void boundedBuffer() {
        Buffer bookFifoBf = BufferUtils.typedBuffer(new BoundedFifoBuffer(2), Book.class);
        Book[] books = Book.getBooks();
        for (Book bk : books) {
            try {
                bookFifoBf.add(bk);
                System.out.println("add" + bk);
            } catch (Exception e) {
                Book removed = (Book) bookFifoBf.remove();
                System.out.print("remove" + removed);
                bookFifoBf.add(bk);
                System.out.println(" and add" + bk);
            }
        }
        while (bookFifoBf.size()>0) {
            System.out.println(bookFifoBf.remove());
        }
    }
}
